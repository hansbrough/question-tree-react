{"version":3,"sources":["components/Home.js","components/GraphUI.js","components/sequentialPath.js","components/detourPath.js","components/skipPath.js","components/compoundConditionalPath.js","components/mixedConditionalPath.js","App.js","index.js"],"names":["Home","src","alt","GraphUI","graph_path","question_set_path","intro_text","useState","decisionTreeInitializing","setDecisionTreeInitializing","decisionTreeInitialized","setDecisionTreeInitialized","currentQuestion","setCurrentQuestion","currentAnswerId","setCurrentAnswerId","correctResponses","setCorrectResponses","inCorrectResponses","setInCorrectResponses","isFinalModule","setIsFinalModule","useEffect","p","DecisionTree","fetch","then","console","log","module","displayNextBtn","updateResponses","responses","setResponses","siblingResponses","some","item","id","responsesCopy","userResponse","Object","assign","answerId","push","idx","findIndex","splice","handleInputChange","e","target","className","style","padding","position","current","total","title","media","map","type","labels","qid","name","onChange","marginBottom","marginTop","length","onClick","prev","disabled","hasPreviousQuestion","actual","next","labelIdx","PathType","App","height","minHeight","exact","to","activeClassName","render","props","location","path","component","sequentialPath","detourPath","skipPath","compoundConditionalPath","mixedConditionalPath","href","rel","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b83ec5bb.chunk.js","sourcesContent":["import React from 'react';\n//= ==== Style ===== //\n\nconst Home = () => {\n  return (\n    <main>\n      <h2>Overview</h2>\n      <p>\n        The 'question-tree-core' package helps your web app navigate conditional paths through a json formatted graph of questions.\n      </p>\n      <p>\n        There are several path types available for use individually or together when defining your quiz or survey.\n        Use the navigation links above to dive into some concrete examples.\n      </p>\n\n      <h3>Glossary of terms used in describing question graphs</h3>\n\n      <dl>\n        <dt>Base Path</dt>\n        <dd>\n          The sequential route through a graph which avoids any conditional paths.\n          <img src=\"https://user-images.githubusercontent.com/658255/28881940-98624038-775e-11e7-9a4e-c1672a51cd81.png\" alt=\"Base Path diagram\"/>\n        </dd>\n\n        <dt>Compound Conditional Path</dt>\n        <dd>\n          A Conditional Path with it's own nested, conditional paths.\n          <img src=\"https://user-images.githubusercontent.com/658255/28884380-6d912060-7766-11e7-8ab9-da45c038dab2.png\" alt=\"Compound Path diagram\"/>\n        </dd>\n\n        <dt>Conditional 'Next'</dt>\n        <dd>\n          A property that points to the next node in a Conditional Path. This will be defined in the Question json File.\n        </dd>\n\n        <dt>Conditional Path</dt>\n        <dd>\n          An optional, offshoot path that exposes users to extra questions or let's them skip questions in the Base Path.\n        </dd>\n\n        <dt>Detour Path</dt>\n        <dd>\n          A type of Conditional Path which exposes users to additional questions.\n          <img src=\"https://user-images.githubusercontent.com/658255/28882908-7f1ab4d6-7761-11e7-8c29-af40f5cd2af2.png\" alt=\"Detour Path Diagram\"/>\n        </dd>\n\n        <dt>End Point Node</dt>\n        <dd>\n          The question set at the end of a conditional path\n        </dd>\n\n        <dt>Graph Length</dt>\n        <dd>\n          The total number of question sets encountered by a user from start to finish during quiz or survey. Can include from one to many paths e.g. a simple Sequential or a path which includes several conditional branches.\n        </dd>\n\n        <dt>Mixed Conditional Path</dt>\n        <dd>\n          A conditional path that contains both a detour and shortcut paths.\n          <img src=\"https://user-images.githubusercontent.com/658255/28886182-624b6d4e-776d-11e7-995a-c9047e55d185.png\"  alt=\"Mixed Path Diagram\"/>\n        </dd>\n\n        <dt>Multi-Branch Path</dt>\n        <dd>\n          A question node that has multiple, conditional paths available for user to choose from.\n          <img src=\"https://user-images.githubusercontent.com/658255/28884089-69aa222c-7765-11e7-8b3e-12ab5f657393.png\" alt=\"MultiBranch Path Diagram\"/>\n        </dd>\n\n        <dt>Multi-Node Path</dt>\n        <dd>\n          A path containing more than one node. Almost all Sequential paths will be multi-node. Conditional Paths might often contain just a single node.\n          <br />\n          <img src=\"https://user-images.githubusercontent.com/658255/28883656-0bdc5f26-7764-11e7-8308-d2ccc0bae480.png\" alt=\"MultiNode Path Diagram\"/>\n        </dd>\n\n        <dt>Path Length</dt>\n        <dd>\n          The total number of nodes for a given path including the start and end point nodes.\n        </dd>\n\n        <dt>Path Delta</dt>\n        <dd>\n          The difference in path lengths between a Sequential Path and a Conditional Path. For example Detour Paths would have a positive integer as a delta value because they add nodes to the overall quiz or survey.\n        </dd>\n\n        <dt>Question Graph</dt>\n        <dd>\n          A method of defining paths through sets of questions.\n        </dd>\n\n        <dt>Node</dt>\n        <dd>\n        A question and set of answers displayed on a single screen in a quiz and defined in the same scope block within the questions json file. Each node has a unique id. Multiple nodes combine to create a path with the graph json file.\n        </dd>\n\n        <dt>Question Set</dt>\n        <dd>\n          A group of related questions displayed on one screen. A Question Set is a type of Node associated with a survey.\n        </dd>\n\n        <dt>Sequential Path</dt>\n        <dd>\n          The simplest of path structures. Defined in a graph file. Does not contain conditional paths.\n        </dd>\n\n        <dt>Sequential 'Next'</dt>\n        <dd>\n          A property that points to the next node in a Base Path. This will be defined in the Graph json File.\n        </dd>\n\n        <dt>Shortcut Path</dt>\n        <dd>\n          A type of Conditional Path that allows users to bypass questions on the Base Path.\n          <img src=\"https://user-images.githubusercontent.com/658255/28883099-294ebac4-7762-11e7-8e54-0b982504954f.png\" alt=\"Shortcut Path Diagram\"/>\n        </dd>\n\n        <dt>Start Point Node</dt>\n        <dd>\n          The question set at the start of a conditional path\n        </dd>\n\n      </dl>\n\n    </main>\n  );\n};\n\nexport default Home;\n","/*\n* Simple example of using the 'question-tree-core' package in React.\n*/\nimport React, { useEffect, useState } from 'react';\nimport DecisionTree from 'question-tree-core';\n//import DecisionTree from \"../utils/DecisionTree\";// or debug w/the unpackaged files\n\nconst GraphUI = ({graph_path, question_set_path, intro_text='Introduction...'}) => {\n  const [decisionTreeInitializing, setDecisionTreeInitializing] = useState();\n  const [decisionTreeInitialized, setDecisionTreeInitialized] = useState();\n  const [currentQuestion, setCurrentQuestion] = useState();\n  const [currentAnswerId, setCurrentAnswerId] = useState();\n  //track user responses in order to provide feedback during summary module.\n  const [correctResponses, setCorrectResponses] = useState([]);\n  const [inCorrectResponses, setInCorrectResponses] = useState([]);\n  const [isFinalModule, setIsFinalModule] = useState();\n\n  // get the module and question graph files.\n  useEffect(() => {\n    if(!decisionTreeInitializing) {\n      const p = DecisionTree.fetch({graph_path, question_set_path});\n      setDecisionTreeInitializing(true);\n      p && p.then(setDecisionTreeInitialized);\n    }\n  },[graph_path, question_set_path, decisionTreeInitializing]);\n\n  // optionally do something upon successful fetch of graph files.\n  useEffect(() => {\n    if(decisionTreeInitialized) {\n      console.log(\"GraphUI question-tree graph files fetched.\");\n    }\n  },[decisionTreeInitialized]);\n\n  // is the final (summary) module currently being displayed.\n  useEffect(() => {\n    if(currentQuestion && currentQuestion.module === 'module_final') {\n      setIsFinalModule(true);\n    } else {\n      setIsFinalModule(false);\n    }\n  },[currentQuestion]);\n\n  const displayNextBtn = !currentQuestion || (currentQuestion && currentAnswerId );//&& !currentQuestion.last\n\n  // App logic keeps track of user answers and how the results are displayed\n  // substitute your own app logic for the example below.\n  const updateResponses = (responses, setResponses, siblingResponses) => {\n    if(!responses.some(item => item.id === currentQuestion.id)) {\n      const responsesCopy = [...responses];\n      const userResponse = Object.assign({}, currentQuestion, {answerId: currentAnswerId});\n      responsesCopy.push(userResponse);\n      setResponses(responsesCopy)\n    }\n    //if previously answered - remove from other responses bucket\n    const idx = siblingResponses.findIndex(item => item.id === currentQuestion.id);\n    if(idx >= 0) {\n      siblingResponses.splice(idx, 1);\n    }\n  }\n\n  // event handler examples\n  const handleNextClick = () => {\n    // 1. keep track of correctness of user answers.\n    if(currentAnswerId) {\n      if(currentAnswerId === (currentQuestion && currentQuestion.actual)) {\n        updateResponses(correctResponses, setCorrectResponses, inCorrectResponses)\n      } else {\n        updateResponses(inCorrectResponses, setInCorrectResponses, correctResponses)\n      }\n    }\n    // 2. get the next question based on the users last response\n    setCurrentQuestion(DecisionTree.next({ labelIdx: currentAnswerId }));\n    // 3. reset\n    setCurrentAnswerId()\n  };\n  const handlePrevClick = () => setCurrentQuestion(DecisionTree.prev());\n  const handleInputChange = e => setCurrentAnswerId(e.target.id)\n\n  return (\n    <div className=\"graph-ui\">\n      <h4>Working Example</h4>\n      {!currentQuestion &&\n        <div style={{padding:\".5rem\"}}>{intro_text}</div>\n      }\n      {currentQuestion &&\n        <div style={{padding:\".5rem\"}}>\n          <p><em>Question ID:</em> \"{currentQuestion.id}\"</p>\n          <p><em>Module ID:</em> \"{currentQuestion.module}\"</p>\n          <p><em>Graph Position:</em> {currentQuestion.position.current} of {currentQuestion.position.total} nodes</p>\n          <hr></hr>\n          <p>{currentQuestion.title}</p>\n          {currentQuestion.media &&\n            currentQuestion.media.map(item => item.type==='image' &&\n              <img key={currentQuestion.id} src={item.src} alt=\"\" />\n            )\n          }\n          {currentQuestion.labels\n            && currentQuestion.labels.map(\n              item => (\n                <label key={item.qid}>\n                  <input type=\"radio\" id={item.qid} name=\"quiz-example\" onChange={handleInputChange}/>\n                  {item.title}\n                </label>\n              )\n          )}\n\n          {isFinalModule &&\n            <div style={{marginBottom:\"1rem\",marginTop:\"1rem\"}}>You got <b>{correctResponses.length}</b> out of <b>{correctResponses.length + inCorrectResponses.length}</b> questions correct.</div>\n          }\n        </div>\n      }\n      <button onClick={handlePrevClick} disabled={!DecisionTree.hasPreviousQuestion()}>Prev</button>\n      <button onClick={handleNextClick} disabled={!displayNextBtn}>Next</button>\n    </div>\n  );\n};\n\nexport default GraphUI;\n","import React from 'react';\nimport GraphUI from './GraphUI';\n\nconst PathType = () => {\n\n  const introText = \"This is an intro screen. Click 'next' to start\";\n  return (\n    <main>\n      <h2>Sequential Path Example</h2>\n      <p>\n        A sequential path is a route through a question graph which avoids any conditional paths.\n        The navigation structure is defined entirely in the Module Graph file. Questions 1 - 4 can also be considered the \"Base Path\".\n      </p>\n      <img\n        src=\"https://user-images.githubusercontent.com/658255/28881940-98624038-775e-11e7-9a4e-c1672a51cd81.png\"\n        alt=\"sequential path diagram\"\n      />\n\n      <GraphUI\n        graph_path=\"/data/graph/sequential\"\n        question_set_path=\"/data/questions/sequential\"\n        intro_text={introText}\n      />\n      <h3>A closer look at the json files</h3>\n      <b>Module Graph JSON</b>\n      <p>\n        Notice the Graph JSON below defines a simple base path for questions 1 - 3 without referencing the conditional fourth question.\n        The module is complete once question 3 is finished as it has no 'next' property. Once a module's questions are completed - navigation moves onto the first question in the next module.\n      </p>\n      <pre><code>\n        {`\n          {\n            \"meta\":{\n              \"graph_id\":\"2\"\n            },\n            \"module_plantId\":{\n              \"title\":\"Plant Identification\",\n              \"questions\": [\n                {\"id\":\"plantId_1\", \"next\":\"plantId_2\"},\n                {\"id\":\"plantId_2\", \"next\":\"plantId_3\"},\n                {\"id\":\"plantId_3\", \"next\":\"plantId_4\"},\n                {\"id\":\"plantId_4\"}\n              ],\n              \"next\":\"module_final\"\n            },\n            \"module_final\":{\n              \"title\":\"Complete\",\n              \"questions\": [\n                { \"id\":\"quiz_results\"}\n              ]\n            }\n          }\n        `}\n      </code></pre>\n      <b>Questions JSON</b>\n      <p>\n      In question 2's definition a conditional path is created to question 4 via the 'next' property.\n      If the user selects this option they'll be redirected to question 4 before continuing along the base path defined in the Graph file above.\n      </p>\n      <pre><code>\n        {`\n          {\n            \"plantId_1\":{\n              \"title\":\"Which of the following is the name of this plant?\",\n              \"media\": [\n                {\"type\":\"image\", \"src\":\"/img/al_aculeata_a_200.jpg\"}\n              ],\n              \"labels\":[\n                {\"title\":\"Aloe aculeata\", \"qid\":\"105\"},\n                {\"title\":\"Agave celsii\", \"qid\":\"106\"},\n                {\"title\":\"Aloe africana\", \"qid\":\"107\"},\n                {\"title\":\"Gasteria baylissiana\", \"qid\":\"108\"}\n              ],\n              \"actual\":\"105\",\n              \"category\":\"quiz\",\n              \"criterion\":\"aloe\",\n              \"type\":\"radio\"\n            },\n            \"plantId_2\":{\n              \"title\":\"Which of the following is the name of this plant?\",\n              \"media\": [\n                {\"type\":\"image\", \"src\":\"/img/a_brevifolia_c_200.jpg\"}\n              ],\n              \"labels\":[\n                {\"title\":\"Aloe arborescens\", \"qid\":\"109\"},\n                {\"title\":\"Aloe vera\", \"qid\":\"110\"},\n                {\"title\":\"Aloe africana\", \"qid\":\"111\"},\n                {\"title\":\"Aloe brevifolia\", \"qid\":\"112\"},\n                {\"title\":\"Aloe aculeata\", \"qid\":\"113\"}\n              ],\n              \"actual\":\"112\",\n              \"category\":\"quiz\",\n              \"criterion\":\"aloe\",\n              \"type\":\"radio\"\n            },\n            \"plantId_3\":{\n              \"title\":\"Which of the following is the name of this plant?\",\n              \"media\": [\n                {\"type\":\"image\", \"src\":\"/img/a_bracteosa_d_200.jpg\"}\n              ],\n              \"labels\":[\n                {\"title\":\"Agave celsii\", \"qid\":\"114\"},\n                {\"title\":\"Aloe vera\", \"qid\":\"115\"},\n                {\"title\":\"Agave bracteosa\", \"qid\":\"116\"},\n                {\"title\":\"Echeveria agavoides\", \"qid\":\"117\"},\n                {\"title\":\"Dudlyea brittonii\", \"qid\":\"118\"}\n              ],\n              \"actual\":\"116\",\n              \"category\":\"quiz\",\n              \"criterion\":\"agave\",\n              \"type\":\"radio\"\n            },\n            \"plantId_4\":{\n              \"title\":\"Which of the following is the name of this plant?\",\n              \"media\": [\n                {\"type\":\"image\", \"src\":\"/img/a_bracteosa_h_200.jpg\"}\n              ],\n              \"labels\":[\n                {\"title\":\"Agave vilamoriana\", \"qid\":\"119\"},\n                {\"title\":\"Aloe chabaudii\", \"qid\":\"120\"},\n                {\"title\":\"Agave chaipensis\", \"qid\":\"121\"},\n                {\"title\":\"Echeveria ferox\", \"qid\":\"122\"},\n                {\"title\":\"Dudlyea pedalanthus\", \"qid\":\"123\"}\n              ],\n              \"actual\":\"120\",\n              \"category\":\"quiz\",\n              \"criterion\":\"agave\",\n              \"type\":\"radio\",\n              \"comment\":\"another chance at agave bracteosa w/a different picture.\"\n            },\n\n            \"quiz_results\":{\n              \"type\":\"summary\",\n              \"qid\":\"10000\"\n            }\n\n          }\n        `}\n      </code></pre>\n    </main>\n  )\n};\n\nexport default PathType;\n","import React from 'react';\nimport GraphUI from './GraphUI';\n\nconst PathType = () => {\n  const introText = \"This is an intro screen. Click 'next' to start\";\n\n  return (\n    <main>\n      <h2>Detour Path Example</h2>\n      <p>A type of Conditional Path which exposes users to additional questions.</p>\n      <img src=\"https://user-images.githubusercontent.com/658255/28882908-7f1ab4d6-7761-11e7-8c29-af40f5cd2af2.png\" alt=\"Detour path diagram\"/>\n      <GraphUI\n        graph_path=\"/data/graph/detour\"\n        question_set_path=\"/data/questions/detour\"\n        intro_text={introText}\n      />\n      <h3>A closer look at the json files</h3>\n      <b>Module Graph JSON</b>\n      <p>\n        Notice the Graph JSON below defines a simple base path for questions 1 - 3 without referencing the conditional fourth question.\n        The module is complete once question 3 is finished as it has no 'next' property.\n      </p>\n      <pre><code>\n        {`\n          {\n            \"meta\":{\n              \"graph_id\":\"2\"\n            },\n            \"module_plantId\":{\n              \"title\":\"Plant Identification\",\n              \"questions\": [\n                {\"id\":\"plantId_1\", \"next\":\"plantId_2\"},\n                {\"id\":\"plantId_2\", \"next\":\"plantId_3\"},\n                {\"id\":\"plantId_3\"}\n              ],\n              \"next\":\"module_final\"\n            },\n            \"module_final\":{\n              \"title\":\"Complete\",\n              \"questions\": [\n                { \"id\":\"quiz_results\"}\n              ]\n            }\n          }\n        `}\n      </code></pre>\n      <b>Questions JSON</b>\n      <p>\n      In question 2's definition a conditional path is created to question 4 via the 'next' property.\n      If the user selects this option they'll be redirected to question 4 before continuing along the base path defined in the Graph file above.\n      </p>\n      <pre><code>\n        {`\n          {\n            \"plantId_1\":{\n              \"title\":\"Which of the following is the name of this plant?\",\n              \"media\": [\n                {\"type\":\"image\", \"src\":\"/img/al_aculeata_a_200.jpg\"}\n              ],\n              \"labels\":[\n                {\"title\":\"Aloe aculeata\", \"qid\":\"105\"},\n                {\"title\":\"Detour\", \"qid\":\"106\"},\n                {\"title\":\"Echeveria sp.\", \"qid\":\"107\"},\n                {\"title\":\"Gasteria baylissiana\", \"qid\":\"108\"}\n              ],\n              \"actual\":\"105\",\n              \"category\":\"quiz\",\n              \"criterion\":\"aloe\",\n              \"type\":\"radio\"\n            },\n            \"plantId_2\":{\n              \"title\":\"Which of the following is the name of this plant?\",\n              \"media\": [\n                {\"type\":\"image\", \"src\":\"/img/a_brevifolia_c_200.jpg\"}\n              ],\n              \"labels\":[\n                {\"title\":\"Aloe arborescens\", \"qid\":\"109\"},\n                {\"title\":\"Aloe vera\", \"qid\":\"110\"},\n                {\"title\":\"Aloe africana\", \"qid\":\"111\", \"next\":\"plantId_4\"},\n                {\"title\":\"Aloe brevifolia\", \"qid\":\"112\"},\n                {\"title\":\"Aloe aculeata\", \"qid\":\"113\"}\n              ],\n              \"actual\":\"112\",\n              \"category\":\"quiz\",\n              \"criterion\":\"aloe\",\n              \"type\":\"radio\"\n            },\n            \"plantId_3\":{\n              \"title\":\"Which of the following is the name of this plant?\",\n              \"media\": [\n                {\"type\":\"image\", \"src\":\"/img/a_bracteosa_d_200.jpg\"}\n              ],\n              \"labels\":[\n                {\"title\":\"Agave celsii\", \"qid\":\"114\"},\n                {\"title\":\"Aloe vera\", \"qid\":\"115\"},\n                {\"title\":\"Agave bracteosa\", \"qid\":\"116\"},\n                {\"title\":\"Echeveria agavoides\", \"qid\":\"117\"},\n                {\"title\":\"Dudlyea brittonii\", \"qid\":\"118\"}\n              ],\n              \"actual\":\"116\",\n              \"category\":\"quiz\",\n              \"criterion\":\"agave\",\n              \"type\":\"radio\"\n            },\n            \"plantId_4\":{\n              \"title\":\"Which of the following is the name of this plant?\",\n              \"media\": [\n                {\"type\":\"image\", \"src\":\"/img/a_bracteosa_h_200.jpg\"}\n              ],\n              \"labels\":[\n                {\"title\":\"Agave vilamoriana\", \"qid\":\"119\"},\n                {\"title\":\"Aloe chabaudii\", \"qid\":\"120\"},\n                {\"title\":\"Agave chaipensis\", \"qid\":\"121\"},\n                {\"title\":\"Echeveria ferox\", \"qid\":\"122\"},\n                {\"title\":\"Dudlyea pedalanthus\", \"qid\":\"123\"}\n              ],\n              \"actual\":\"120\",\n              \"category\":\"quiz\",\n              \"criterion\":\"agave\",\n              \"type\":\"radio\",\n              \"comment\":\"another chance at agave bracteosa w/a different picture.\"\n            },\n\n            \"quiz_results\":{\n              \"type\":\"summary\",\n              \"qid\":\"10000\"\n            }\n\n          }\n        `}\n      </code></pre>\n    </main>\n  )\n};\n\nexport default PathType;\n","import React from 'react';\nimport GraphUI from './GraphUI';\n\nconst PathType = () => {\n  const introText = \"This is an intro screen. Click 'next' to start\";\n\n  return (\n    <main>\n      <h2>Shortcut Path Example</h2>\n        <p>\n          A type of Conditional Path that allows users to bypass questions on the Base Path.\n          In the diagram below the Graph Length is only 2 nodes if the shortcut is used.\n        </p>\n        <img\n          src=\"https://user-images.githubusercontent.com/658255/28883099-294ebac4-7762-11e7-8e54-0b982504954f.png\"\n          alt=\"Shortcut path diagram\"\n        />\n      <GraphUI\n        graph_path=\"/data/graph/shortcut\"\n        question_set_path=\"/data/questions/shortcut\"\n        intro_text={introText}\n      />\n      <h3>A closer look at the json files</h3>\n      <b>Module Graph JSON</b>\n      <p>\n      The <em>Base Path</em> in this example is 3 nodes long. The <em>Path Length</em> will stay at 3 unless the user chooses the shortcut option in the first question.\n      </p>\n      <pre><code>\n        {`\n  {\n    \"meta\":{\n      \"graph_id\":\"1\"\n    },\n    \"module_plantId\":{\n      \"title\":\"Plant Identification\",\n      \"questions\": [\n        {\"id\":\"plantId_1\", \"next\":\"plantId_2\"},\n        {\"id\":\"plantId_2\", \"next\":\"plantId_3\"},\n        {\"id\":\"plantId_3\"}\n      ],\n      \"next\":\"module_final\"\n    },\n    \"module_final\":{\n      \"title\":\"What's Next\",\n      \"questions\": [\n        { \"id\":\"quiz_results\"}\n      ]\n    }\n  }\n        `}\n      </code></pre>\n      <b>Questions JSON</b>\n      <p>\n      The user can skip question 2 by choosing the shortcut option in question 1. This reduces the <em>Path Length</em> from 3 to 2.\n      The option defines a 'next' property and triggers a jump to a node further in the <em>Base Path</em>\n      </p>\n      <pre><code>\n        {`\n  {\n    \"plantId_1\":{\n      \"title\":\"Which of the following is the name of this plant?\",\n      \"media\": [\n        {\"type\":\"image\", \"src\":\"/img/al_aculeata_a_200.jpg\"}\n      ],\n      \"labels\":[\n        {\"title\":\"Aloe aculeata\", \"qid\":\"105\"},\n        {\"title\":\"'Shortcut'\", \"qid\":\"106\", \"next\":\"plantId_3\"},\n        {\"title\":\"Aloe africana\", \"qid\":\"107\"},\n        {\"title\":\"Gasteria baylissiana\", \"qid\":\"108\"}\n      ],\n      \"actual\":\"105\",\n      \"category\":\"quiz\",\n      \"criterion\":\"aloe\",\n      \"type\":\"radio\"\n    },\n    \"plantId_2\":{\n      \"title\":\"Which of the following is the name of this plant?\",\n      \"media\": [\n        {\"type\":\"image\", \"src\":\"/img/a_brevifolia_c_200.jpg\"}\n      ],\n      \"labels\":[\n        {\"title\":\"Aloe arborescens\", \"qid\":\"109\"},\n        {\"title\":\"Aloe vera\", \"qid\":\"110\"},\n        {\"title\":\"Aloe africana\", \"qid\":\"111\"},\n        {\"title\":\"Aloe brevifolia\", \"qid\":\"112\"},\n        {\"title\":\"Aloe aculeata\", \"qid\":\"113\"}\n      ],\n      \"actual\":\"112\",\n      \"category\":\"quiz\",\n      \"criterion\":\"aloe\",\n      \"type\":\"radio\"\n    },\n    \"plantId_3\":{\n      \"title\":\"Which of the following is the name of this plant?\",\n      \"media\": [\n        {\"type\":\"image\", \"src\":\"/img/a_bracteosa_d_200.jpg\"}\n      ],\n      \"labels\":[\n        {\"title\":\"Agave celsii\", \"qid\":\"114\"},\n        {\"title\":\"Aloe vera\", \"qid\":\"115\"},\n        {\"title\":\"Agave bracteosa\", \"qid\":\"116\"},\n        {\"title\":\"Echeveria agavoides\", \"qid\":\"117\"},\n        {\"title\":\"Dudlyea brittonii\", \"qid\":\"118\"}\n      ],\n      \"actual\":\"116\",\n      \"category\":\"quiz\",\n      \"criterion\":\"agave\",\n      \"type\":\"radio\"\n    },\n\n    \"quiz_results\":{\n      \"type\":\"summary\",\n      \"qid\":\"10000\"\n    }\n  }\n        `}\n      </code></pre>\n    </main>\n  )\n};\n\nexport default PathType;\n","import React from 'react';\nimport GraphUI from './GraphUI';\n\nconst PathType = () => {\n  const introText = \"This is an intro screen. Click 'next' to start\";\n\n  return (\n    <main>\n      <h2>Compound Conditional Path Example</h2>\n      <p>\n        A Conditional Path with it's own nested conditional paths.\n      </p>\n      <img\n        src=\"https://user-images.githubusercontent.com/658255/28884380-6d912060-7766-11e7-8ab9-da45c038dab2.png\"\n        alt=\"Compound Conditional path diagram\"\n      />\n      <GraphUI\n        graph_path=\"/data/graph/detour_compound\"\n        question_set_path=\"/data/questions/detour_compound\"\n        intro_text={introText}\n      />\n      <h3>A closer look at the json files</h3>\n      <b>Module Graph JSON</b>\n      <p>\n        The <em>Base Path</em> is defined below as questions 1, 2 and 3.\n        It's not possible to get to questions 4, 5, or 6 with out following a conditional path.\n        Don't include conditional questions in the module graph. In this example the conditional questions 4 - 6 are listed in the questions graph. \n      </p>\n      <pre><code>\n        {`\n  {\n    \"meta\":{\n      \"graph_id\":\"1\"\n    },\n    \"module_plantId\":{\n      \"title\":\"Plant Identification (Detour/Compound)\",\n      \"questions\": [\n        {\"id\":\"plantId_1\", \"next\":\"plantId_2\"},\n        {\"id\":\"plantId_2\", \"next\":\"plantId_3\"},\n        {\"id\":\"plantId_3\"}\n      ],\n      \"next\":\"module_final\"\n    },\n    \"module_final\":{\n      \"title\":\"What's Next\",\n      \"questions\": [\n        { \"id\":\"quiz_results\"}\n      ]\n    }\n  }\n        `}\n      </code></pre>\n      <b>Questions JSON</b>\n      <p>\n        Question 2 contains an answer that is the top level conditional path.\n        If a user goes down this route to question 4 they can choose one of the <em>nested</em> conditional paths which lead to questions 5 or 6.\n        Questions 5 and 6 do not have their own conditional options defined so navigation will return to the <em>Base Paths</em> next item - question 3.\n        Once question 3 is completed the module is also considered completed and navigation will move to the next Graph module.\n      </p>\n      <pre><code>\n        {`\n  {\n    \"plantId_1\":{\n      \"title\":\"Which of the following is the name of this plant?\",\n      \"media\": [\n        {\"type\":\"image\", \"src\":\"/img/al_aculeata_a_200.jpg\"}\n      ],\n      \"labels\":[\n        {\"title\":\"Aloe aculeata\", \"qid\":\"105\"},\n        {\"title\":\"Agave sp.\", \"qid\":\"106\"},\n        {\"title\":\"Echeveria x agave 'Compound'\", \"qid\":\"107\"},\n        {\"title\":\"Gasteria baylissiana\", \"qid\":\"108\"}\n      ],\n      \"actual\":\"105\",\n      \"category\":\"quiz\",\n      \"criterion\":\"aloe\",\n      \"type\":\"radio\"\n    },\n    \"plantId_2\":{\n      \"title\":\"Which of the following is the name of this plant?\",\n      \"media\": [\n        {\"type\":\"image\", \"src\":\"/img/a_brevifolia_c_200.jpg\"}\n      ],\n      \"labels\":[\n        {\"title\":\"Aloe arborescens\", \"qid\":\"109\"},\n        {\"title\":\"Aloe vera\", \"qid\":\"110\"},\n        {\"title\":\"Aloe africana\", \"qid\":\"111\", \"next\":\"plantId_4\"},\n        {\"title\":\"Aloe brevifolia\", \"qid\":\"112\"},\n        {\"title\":\"Aloe aculeata\", \"qid\":\"113\"}\n      ],\n      \"actual\":\"112\",\n      \"category\":\"quiz\",\n      \"criterion\":\"aloe\",\n      \"type\":\"radio\"\n    },\n    \"plantId_3\":{\n      \"title\":\"Which of the following is the name of this plant?\",\n      \"media\": [\n        {\"type\":\"image\", \"src\":\"/img/a_bracteosa_d_200.jpg\"}\n      ],\n      \"labels\":[\n        {\"title\":\"Agave celsii\", \"qid\":\"114\"},\n        {\"title\":\"Aloe vera\", \"qid\":\"115\"},\n        {\"title\":\"Agave bracteosa\", \"qid\":\"116\"},\n        {\"title\":\"Echeveria agavoides\", \"qid\":\"117\"},\n        {\"title\":\"Dudlyea brittonii\", \"qid\":\"118\"}\n      ],\n      \"actual\":\"116\",\n      \"category\":\"quiz\",\n      \"criterion\":\"agave\",\n      \"type\":\"radio\"\n    },\n    \"plantId_4\":{\n      \"title\":\"Which of the following is the name of this plant?\",\n      \"media\": [\n        {\"type\":\"image\", \"src\":\"/img/a_bracteosa_h_200.jpg\"}\n      ],\n      \"labels\":[\n        {\"title\":\"Agave celsii\", \"qid\":\"114\"},\n        {\"title\":\"Aloe vera\", \"qid\":\"115\", \"next\":\"plantId_5\"},\n        {\"title\":\"Agave bracteosa\", \"qid\":\"116\"},\n        {\"title\":\"Echeveria agavoides\", \"qid\":\"117\",\"next\":\"plantId_6\"},\n        {\"title\":\"Dudlyea brittonii\", \"qid\":\"118\"}\n      ],\n      \"actual\":\"116\",\n      \"category\":\"quiz\",\n      \"criterion\":\"agave\",\n      \"type\":\"radio\",\n      \"comment\":\"another chance at agave bracteosa w/a different picture.\"\n    },\n    \"plantId_5\":{\n      \"title\":\"A Detour Question\",\n      \"media\": [\n        {\"type\":\"image\", \"src\":\"/img/a_bracteosa_frost_200.jpg\"}\n      ],\n      \"labels\":[\n        {\"title\":\"Agave bracteosa 'Calamar'\", \"qid\":\"119\"},\n        {\"title\":\"Aloe sp.\", \"qid\":\"120\"},\n        {\"title\":\"Agave bracteosa 'branch 1'\", \"qid\":\"121\"},\n        {\"title\":\"Echeveria 'branch 2'\", \"qid\":\"122\"},\n        {\"title\":\"Agave bracteosa varigata\", \"qid\":\"123\"}\n      ],\n      \"actual\":\"121\",\n      \"category\":\"quiz\",\n      \"criterion\":\"agave\",\n      \"type\":\"radio\"\n    },\n    \"plantId_6\":{\n      \"title\":\"Compound branch 1 Question 1\",\n      \"media\": [\n        {\"type\":\"image\", \"src\":\"/img/a_attenuata_a_200.jpg\"}\n      ],\n      \"labels\":[\n        {\"title\":\"Agave bovicornuta\", \"qid\":\"124\"},\n        {\"title\":\"Agave havardiana\", \"qid\":\"125\"},\n        {\"title\":\"Agave attenuata\", \"qid\":\"126\"},\n        {\"title\":\"Agave lophantha\", \"qid\":\"127\"},\n        {\"title\":\"Agave bracteosa\", \"qid\":\"128\"}\n      ],\n      \"actual\":\"126\",\n      \"category\":\"quiz\",\n      \"criterion\":\"agave\",\n      \"type\":\"radio\"\n    },\n    \"quiz_results\":{\n      \"type\":\"summary\",\n      \"qid\":\"10000\"\n    }\n  }\n        `}\n      </code></pre>\n    </main>\n  )\n};\n\nexport default PathType;\n","import React from 'react';\nimport GraphUI from './GraphUI';\n\nconst PathType = () => {\n  const introText = \"This is an intro screen. Click 'next' to start\";\n\n  return (\n    <main>\n      <h2>Mixed Conditional Path Example</h2>\n      <p>\n        A conditional path that contains both detour and shortcut paths.\n        In the diagram below 'path 1' represents a Shortcut Path with a Graph Length of 3, while 'path 2' represents a Detour Path with a Graph Length of 5.\n      </p>\n      <p>\n        The DecisionTree keeps track of the <em>Path Delta</em> and uses it to calculate the user's position within a question graph.\n        For example a user on node 4 in the diagram below would be on question 2 of 4 ( Base Path + 1). If they took a further detour to node 5 they would be on question 3 of 5 (Base Path + 2).\n        If the user took the shortcut path from node 4 to node 3 then they would be on question 3 of 3 ( Base Path + 1 -1).\n        Position data is added to question objects returned from the <em>next()</em> and <em>prev()</em> methods.\n      </p>\n      <img\n        src=\"https://user-images.githubusercontent.com/658255/28886182-624b6d4e-776d-11e7-995a-c9047e55d185.png\"\n        alt=\"Mixed Conditional path diagram\"\n      />\n      <GraphUI\n        graph_path=\"/data/graph/mixed_conditional\"\n        question_set_path=\"/data/questions/mixed_conditional\"\n        intro_text={introText}\n      />\n      <h3>A closer look at the json files</h3>\n      <b>Module Graph JSON</b>\n      <p>\n        The <em>Base Path</em> is declared as questions 1 - 3 with questions 4 and 5 unreachable unless accessed by the condtional routes.\n        When both graphs are taken into account - there are three routes through the question set: the <em>Base Path</em>, the Detour path and the and Detour + Shortcut path.\n        The <em>Path Length</em> is modified when uses choose a conditional path. For example going down a <em>Detour Path</em> would increase the offical <em>Path Length</em> by 1.\n      </p>\n      <pre><code>\n        {`\n  {\n    \"meta\":{\n      \"graph_id\":\"1\"\n    },\n    \"module_plantId\":{\n      \"title\":\"Plant Identification - Mixed Conditional\",\n      \"questions\": [\n        {\"id\":\"plantId_1\", \"next\":\"plantId_2\"},\n        {\"id\":\"plantId_2\", \"next\":\"plantId_3\"},\n        {\"id\":\"plantId_3\"}\n      ],\n      \"next\":\"module_final\"\n    },\n    \"module_final\":{\n      \"title\":\"What's Next\",\n      \"questions\": [\n        { \"id\":\"quiz_results\"}\n      ]\n    }\n  }\n        `}\n      </code></pre>\n      <b>Questions JSON</b>\n      <p>\n        Question 1 used the 'next' property to set up a conditional route through questions 4 and 5.\n        Question 4 also adds a shortcut route back to the last node on the base path (Question 3)\n      </p>\n      <pre><code>\n        {`\n  {\n    \"plantId_1\":{\n      \"title\":\"Which of the following is the name of this plant?\",\n      \"media\": [\n        {\"type\":\"image\", \"src\":\"/img/al_aculeata_a_200.jpg\"}\n      ],\n      \"labels\":[\n        {\"title\":\"Aloe aculeata\", \"qid\":\"105\"},\n        {\"title\":\"Agave sp.\", \"qid\":\"106\"},\n        {\"title\":\"Detour\", \"qid\":\"107\", \"next\":\"plantId_4\"},\n        {\"title\":\"Gasteria baylissiana\", \"qid\":\"108\"}\n      ],\n      \"actual\":\"105\",\n      \"category\":\"quiz\",\n      \"criterion\":\"aloe\",\n      \"type\":\"radio\"\n    },\n    \"plantId_2\":{\n      \"title\":\"Which of the following is the name of this plant?\",\n      \"media\": [\n        {\"type\":\"image\", \"src\":\"/img/a_brevifolia_c_200.jpg\"}\n      ],\n      \"labels\":[\n        {\"title\":\"Aloe arborescens\", \"qid\":\"109\"},\n        {\"title\":\"Aloe vera\", \"qid\":\"110\"},\n        {\"title\":\"Aloe africana\", \"qid\":\"111\"},\n        {\"title\":\"Aloe brevifolia\", \"qid\":\"112\"},\n        {\"title\":\"Aloe aculeata\", \"qid\":\"113\"}\n      ],\n      \"actual\":\"112\",\n      \"category\":\"quiz\",\n      \"criterion\":\"aloe\",\n      \"type\":\"radio\"\n    },\n    \"plantId_3\":{\n      \"title\":\"Which of the following is the name of this plant?\",\n      \"media\": [\n        {\"type\":\"image\", \"src\":\"/img/a_bracteosa_d_200.jpg\"}\n      ],\n      \"labels\":[\n        {\"title\":\"Kalinkoe luciae\", \"qid\":\"129\"},\n        {\"title\":\"Agave havardiana\", \"qid\":\"130\"},\n        {\"title\":\"Echeveria subrigida\", \"qid\":\"131\"},\n        {\"title\":\"Echeveria lophantha\", \"qid\":\"132\"},\n        {\"title\":\"Echeveria gigantium\", \"qid\":\"133\"}\n      ],\n      \"actual\":\"129\",\n      \"category\":\"quiz\",\n      \"criterion\":\"agave\",\n      \"type\":\"radio\"\n    },\n    \"plantId_4\":{\n      \"title\":\"Which of the following is the name of this plant?\",\n      \"media\": [\n        {\"type\":\"image\", \"src\":\"/img/a_bracteosa_h_200.jpg\"}\n      ],\n      \"labels\":[\n        {\"title\":\"Agave celsii\", \"qid\":\"114\"},\n        {\"title\":\"Aloe vera\", \"qid\":\"115\"},\n        {\"title\":\"Shortcut\", \"qid\":\"116\",\"next\":\"plantId_3\"},\n        {\"title\":\"Detour continued\", \"qid\":\"117\",\"next\":\"plantId_5\"},\n        {\"title\":\"Dudlyea brittonii\", \"qid\":\"118\"}\n      ],\n      \"actual\":\"116\",\n      \"category\":\"quiz\",\n      \"criterion\":\"agave\",\n      \"type\":\"radio\",\n      \"comment\":\"another chance at agave bracteosa w/a different picture.\"\n    },\n    \"plantId_5\":{\n      \"title\":\"A Detour Question\",\n      \"media\": [\n        {\"type\":\"image\", \"src\":\"/img/a_bracteosa_frost_200.jpg\"}\n      ],\n      \"labels\":[\n        {\"title\":\"Agave bracteosa 'Calamar'\", \"qid\":\"119\"},\n        {\"title\":\"Aloe sp.\", \"qid\":\"120\"},\n        {\"title\":\"Agave bracteosa\", \"qid\":\"121\"},\n        {\"title\":\"Back to base path\", \"qid\":\"122\"},\n        {\"title\":\"Agave bracteosa varigata\", \"qid\":\"123\"}\n      ],\n      \"actual\":\"121\",\n      \"category\":\"quiz\",\n      \"criterion\":\"agave\",\n      \"type\":\"radio\"\n    },\n\n    \"quiz_results\":{\n      \"type\":\"summary\",\n      \"qid\":\"10000\"\n    }\n  }\n        `}\n      </code></pre>\n    </main>\n  )\n};\n\nexport default PathType;\n","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route, NavLink } from 'react-router-dom';\n\nimport Home from \"./components/Home\";\nimport sequentialPath from \"./components/sequentialPath\";\nimport detourPath from \"./components/detourPath\";\nimport skipPath from \"./components/skipPath\";\nimport compoundConditionalPath from \"./components/compoundConditionalPath\";\nimport mixedConditionalPath from \"./components/mixedConditionalPath\";\n/*--Styles--*/\nimport './App.css';\n\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n      <header className=\"App-header\" style={{height:'12rem', minHeight:\"auto\"}}>\n        <h1 style={{marginBottom:'.5rem'}}>Decision Tree Demo</h1>\n        <p style={{marginTop:'.5rem'}}>How to use the npm 'question-tree-core' package with React</p>\n        <nav>\n          <NavLink exact to=\"/\" activeClassName=\"active\">Overview</NavLink>\n          <NavLink exact to=\"/sequential-path\" activeClassName=\"active\">Sequential</NavLink>\n          <NavLink exact to=\"/detour-path\" activeClassName=\"active\">Detour</NavLink>\n          <NavLink exact to=\"/shortcut-path\" activeClassName=\"active\">Shortcut</NavLink>\n          <NavLink exact to=\"/compound-conditional-path\" activeClassName=\"active\">Compound Conditional</NavLink>\n          <NavLink exact to=\"/mixed-conditional-path\" activeClassName=\"active\">Mixed Conditional</NavLink>\n        </nav>\n      </header>\n      <Route render={(props) => {\n        const { location } = props;\n        return (\n          <Switch location={location}>\n            <Route exact path=\"/\" component={Home} />\n            <Route exact path=\"/sequential-path\" component={sequentialPath} />\n            <Route exact path=\"/detour-path\" component={detourPath} />\n            <Route exact path=\"/shortcut-path\" component={skipPath} />\n            <Route exact path=\"/compound-conditional-path\" component={compoundConditionalPath} />\n            <Route exact path=\"/mixed-conditional-path\" component={mixedConditionalPath} />\n          </Switch>\n        )}\n      }\n      />\n        <footer>\n          <div className=\"content-container\">\n           <span>Available on npmjs: <a href=\"https://www.npmjs.com/package/question-tree-core\" target=\"_blank\" rel=\"noreferrer\">question-tree-core</a></span>\n          </div>\n        </footer>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}